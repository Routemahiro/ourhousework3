# バックエンド処理定義

## 1. 認証処理
### 1.1 サインアップ処理
#### 概要
新規ユーザーの登録処理

#### 処理フロー
1. 入力検証
   - メールアドレスの形式チェック
   - パスワードの強度チェック（8文字以上、英数字混在）
   - メールアドレスの重複チェック

2. ユーザー作成
   - パスワードのハッシュ化（bcrypt）
   - usersテーブルへの登録
   - JWTトークンの生成

3. レスポンス生成
   - ユーザー情報とトークンを返却

#### エラー処理
- メールアドレス重複: 409 Conflict
- バリデーションエラー: 400 Bad Request
- DB登録エラー: 500 Internal Server Error

### 1.2 サインイン処理
#### 概要
既存ユーザーの認証処理

#### 処理フロー
1. 入力検証
   - メールアドレスの存在確認
   - パスワードの照合

2. セッション管理
   - JWTトークンの生成
   - Redisへのセッション情報保存

3. レスポンス生成
   - ユーザー情報とトークンを返却

#### エラー処理
- 認証失敗: 401 Unauthorized
- アカウントロック: 423 Locked

## 2. 家事管理処理
### 2.1 家事一覧取得
#### 概要
ユーザーの家事一覧を取得

#### 処理フロー
1. クエリパラメータ処理
   - type, status, dateの解析
   - ページネーション情報の取得

2. データ取得
   - houseworksテーブルから条件に合う家事を取得
   - 関連する画像情報の取得
   - スケジュール情報の取得（定期の場合）

3. レスポンスデータ整形
   - 一覧表示用のデータ構造に変換
   - 画像URLの生成

### 2.2 家事登録処理
#### 概要
新規家事の登録

#### 処理フロー
1. 入力データ検証
   - 必須項目チェック
   - データ型チェック
   - 画像ファイルの形式チェック

2. トランザクション処理
   - houseworksテーブルへの登録
   - 画像のアップロードと登録
   - スケジュール情報の登録（定期の場合）

3. 次回実行日時の計算（定期の場合）
   - repeat_typeとrepeat_valueに基づく計算
   - next_execution_atの設定

### 2.3 家事状態更新
#### 概要
家事の完了状態の更新

#### 処理フロー
1. 状態更新
   - housework_historiesへの記録
   - 完了日時の記録

2. 定期家事の場合の追加処理
   - last_executed_atの更新
   - next_execution_atの再計算と更新

## 3. 画像処理
### 3.1 画像アップロード
#### 概要
家事に関連する画像の処理

#### 処理フロー
1. 画像検証
   - ファイルサイズチェック（最大10MB）
   - 形式チェック（jpg, png, webp）
   - 画像の枚数チェック

2. 画像処理
   - メイン画像変換
     - 最大サイズ: 1920x1080px
     - 品質: 80%
     - 形式: WebP
   - サムネイル生成
     - 最大サイズ: 400x300px
     - 品質: 70%
     - 形式: WebP
   - 自動リサイズ処理
     - 制限サイズを超える画像は自動的に最適化

3. アップロード
   - S3へのアップロード
   - CloudFrontキャッシュの設定
   - housework_imagesテーブルへの登録

## 4. バッチ処理
### 4.1 定期家事の更新処理
#### 概要
定期的な家事の次回実行日時の更新

#### 処理フロー
1. 更新対象の抽出
   - next_execution_atが過去の家事を抽出

2. 次回実行日時の計算
   - repeat_typeとrepeat_valueに基づく計算
   - next_execution_atの更新

3. 通知処理
   - 当日実行予定の家事を抽出
   - 通知キューへの登録

#### 実行タイミング
- 毎日深夜0時
- 1時間ごとの差分更新

## 5. エラー処理共通仕様
### 5.1 エラーログ
- エラーレベル
  - INFO: 一般的な処理情報
  - WARN: 警告（重複登録など）
  - ERROR: システムエラー
  - FATAL: 致命的エラー

### 5.2 リトライ処理
- データベース操作
  - 最大試行回数: 3回
  - 基本遅延時間: 1秒
  - 最大遅延時間: 5秒

- 外部API・画像処理
  - 最大試行回数: 5回
  - 基本遅延時間: 2秒
  - 最大遅延時間: 10秒

### 5.3 トランザクション管理
- 書き込みを伴う処理は必ずトランザクション制御
- デッドロック対策としてタイムアウト設定（10秒） 