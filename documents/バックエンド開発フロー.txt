# バックエンド開発フロー

## 1. 認証基盤の実装
### 1.1 NextAuth.jsセットアップ
- 依存関係のインストール
- 設定ファイルの作成
- セッション管理の実装

### 1.2 認証API実装
- サインアップAPI (/api/auth/signup)
  - バリデーション
  - パスワードハッシュ化
  - ユーザー作成処理
  
- サインインAPI (/api/auth/signin)
  - 認証処理
  - JWTトークン生成
  - セッション管理

### 1.3 認証ミドルウェア
- 保護されたルートの設定
- トークン検証
- リダイレクト処理

## 2. データベースセットアップ
### 2.1 Prisma初期設定
- Prismaのインストール
- スキーマ定義
- 型生成

### 2.2 マイグレーション
- マイグレーションファイル作成
- テストデータ投入
- ロールバック手順の確認

### 2.3 開発用データ
- シードデータの作成
- テスト用データの準備
- データリセットスクリプト

## 3. 基本CRUD API実装
### 3.1 単発家事の基本機能
- 登録API
  - バリデーション
  - DB登録処理
  - レスポンス整形

- 一覧取得API
  - フィルタリング実装
  - ページネーション
  - ソート機能

### 3.2 画像アップロード機能
- S3連携
- 画像処理実装
- 画像URL管理

### 3.3 定期家事機能
- スケジュール登録
- 繰り返しパターン実装
- 次回実行日計算

### 3.4 更新・削除機能
- 更新API
- 削除API
- 関連データの整合性管理

## 4. 画像処理システム
### 4.1 ストレージセットアップ
- S3バケット作成
- アクセス権限設定
- CORS設定

### 4.2 画像処理実装
- アップロード処理
- リサイズ処理
  - メイン画像 (1920x1080px, 80%品質)
  - サムネイル (400x300px, 70%品質)
- 形式変換 (WebP)

### 4.3 CDN設定
- CloudFront設定
- キャッシュ戦略
- URL生成処理

## 5. 定期実行システム
### 5.1 スケジューラー
- スケジューラーの実装
- ジョブキューの設定
- エラーハンドリング

### 5.2 実行管理
- 次回実行日計算ロジック
- 実行履歴管理
- ステータス管理

### 5.3 通知システム
- 通知トリガー実装
- メール通知設定
- プッシュ通知設定

## 6. 追加機能実装
### 6.1 アカウント管理
- プロフィール更新
- パスワード変更
- アカウント削除

### 6.2 統計情報
- 実行履歴集計
- レポート生成
- データ分析API

### 6.3 バッチ処理
- 定期クリーンアップ
- データバックアップ
- 統計情報更新

## 開発時の注意点
### テスト戦略
- ユニットテスト
- 統合テスト
- E2Eテスト
- パフォーマンステスト

### エラーハンドリング
- グローバルエラーハンドラー
- カスタムエラークラス
- ログ管理

### ドキュメント管理
- API仕様書の更新
- スキーマ変更履歴
- デプロイ手順

### モニタリング
- パフォーマンス監視
- エラー監視
- リソース使用状況

## 各ステップでの共通タスク
1. テストコードの作成
2. エラーハンドリングの実装
3. ドキュメントの更新
4. コードレビュー
5. 動作確認
6. パフォーマンス計測 